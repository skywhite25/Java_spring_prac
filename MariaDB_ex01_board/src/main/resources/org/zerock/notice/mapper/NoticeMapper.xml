<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.notice.mapper.NoticeMapper">

	<!-- 1. 공지사항 목록 -->
	<select id="list" resultType="org.zerock.notice.vo.NoticeVO">
		select rnum, no, title, startDate, endDate 
		from(	
			select rownum rnum, no, title, startDate, endDate
			from(	
				select no, title, startDate, endDate
				from notice 
				
				<!-- mybatis에서는 데이터 자동변환을 한다. 글자가 한 자이면 char -->
				<!-- include refid="search" /> : 검색 가져오기 -->
				<include refid="search" />
				
				order by no desc
				)
			)
			where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 검색 조건 쿼리 따로 저장하기 -->
	<sql id="search">
		<!-- mybatis에서는 데이터 자동변환을 한다. 글자가 한 자이면 char -->
		<if test="word != null and word != ''.toString()">
			<!-- 검색하는 데이터가 있는 경우 where가 나온다. -->
			where 1 = 0
			<!-- 't','c','w' -> .toString() 추가 / 두 개 이상은 x -->
			<if test="key == 't'.toString()">
				<!-- #{word}만 있으면 제목이나 내용 전체를 검색해야 되므로 앞뒤로 %를 붙여줘야 부분 검색 가능 -->
				OR title like '%' || #{word} || '%'
			</if>
			<if test="key == 'c'.toString()">
				OR content like '%' || #{word} || '%'
			</if>
			<if test="key == 'tc'">
				OR title like '%' || #{word} || '%'
				OR content like '%' || #{word} || '%'
			</if>
			<if test="key == 'all'">
				OR title like '%' || #{word} || '%'
				OR content like '%' || #{word} || '%'
			</if>
		</if>	
	</sql>
	
	<!-- 1-1. 공지사항 전체글의 갯수 -->
	<select id="getTotalRow"  resultType="java.lang.Long">
		select count(*) from notice
	<include refid="search" />	
	</select>
	
	<!-- 2. 공지사항 글보기 -->
	<select id="view" resultType="org.zerock.notice.vo.NoticeVO">
		select no, title, content, startDate, endDate
		from notice where no = #{no}
	</select>	
	
	<!-- 3. 공지사항 글쓰기 -->
	<insert id="write">
		insert into notice(no, title, content, startDate, endDate)
		values(notice_seq.nextval, #{title}, #{content}, #{startDate}, #{endDate})
	</insert>
	
	<!-- 4. 공지사항 글수정 -->
	<update id="update">
		update notice set title = #{title}, content = #{content}, startDate = #{startDate}, endDate = #{endDate}
		where no = #{no}
	</update>
	
	<!-- 5. 공지사항 글삭제 -->
	<delete id="delete">
		delete notice
		where no = #{no}
	</delete>
</mapper>
