<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespcae="package + interface" -->
<mapper namespace="com.mcbt.board.mapper.BoardMapper">
	<!-- 1. 게시판 리스트 -->
	<!-- id="method" -->
	<!-- 01. 게시글 전체 목록 조회 및 검색조회까지 -->
	<select id="list" resultType="com.mcbt.board.vo.BoardVO">
		
		<!-- 01. 회원권환이 없는 게시글 목록 쿼리
		SELECT bno, title, content, writer, regdate, viewcnt 
		FROM tbl_board -->
		
		<!-- 02. 회원 권한이 있는 게시글 목록 쿼리
		SELECT bno, title, content, b.regdate, viewcnt, user_name AS userName
		FROM tbl_board b, tbl_member m -->
		<!-- WHERE절을 include 태그로 삽입 -->
		<!-- <include refid="search"></include>
		ORDER BY bno desc, regdate desc -->
		
		<!-- 03. 페이지 나누기를 포함한 게시글 목록 -->
		<!-- 페이징 -->
		<include refid="pagingHeader"></include>
			SELECT 
				ROWNUM, no, title, content, writer, writedate, hit, nickname, show, 
				<!-- **댓글숫자표시 -->
				(SELECT COUNT(*) FROM reply WHERE no = b.no) AS replyhit
			FROM 
				board b, member m
			<!-- 검색조건 -->
			<include refid="search"></include>
			ORDER BY no DESC, b.writedate DESC 
		<!-- 페이징 -->
		<include refid="pagingFooter"></include>	
	</select>
	
	<!-- 02_02. 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*) 
		FROM board b, member m
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="search"></include>
	</select>
	
	<!-- 2. 게시판 글보기 -->
	<select id="view" resultType="com.mcbt.board.vo.BoardVO">
		SELECT no, title, content, writer, writedate, hit, replyhit, nickname AS nickName, show, category
		FROM board b, member m WHERE b.writer = m.id AND no = #{no}
	</select>
	
	<!-- 2-1. 게시판 조회수 1증가 -->
	<update id="increase">
		update board set hit = hit + 1 where no = #{no}
	</update>
	
	<!-- 3. 게시판 글쓰기 -->
	<insert id="write">
		insert into board(no, title, content, writer, show, category)
		values(board_seq.nextval, #{title}, #{content}, #{writer}, 'y', #{category}
	</insert>
	
	<!-- 4. 게시판 글수정 -->
	<update id="update">
		update board set title = #{title}, content = #{content}, writer = #{writer} where no = #{no}
	</update>
	
	<update id="delete">
		UPDATE board SET show = 'n' WHERE bno = #{bno}
	</update>
	
	<sql id="search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="option == 'All'">
				WHERE b.writer = m.id
				AND	(nickName like '%'||#{q}||'%'
				OR content like '%'||#{q}||'%'
				OR title like '%'||#{q}||'%')
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE b.writer = m.id 
				AND ${option} like '%'||#{q}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
		SELECT * FROM (
			SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
			) A
		) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
</mapper>